/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode GetIntersectionNode(ListNode headA, ListNode headB) {
        if (headA==null || headB==null) return null;
        int a=1, b=1;
        ListNode l1=headA, l2=headB;
        while (l1.next!=null){a++; l1=l1.next;}
        while (l2.next!=null){b++; l2=l2.next;}
        if (l1!=l2) return null;
        l1=headA; l2=headB;
        while(a!=b){
            if (a<b) {
               l2=l2.next; b--; 
            }
            if (a>b) {
                l1=l1.next; a--;
            }
        }
        if (l1==l2) return l1;
        while(l1.next!=l2.next){
            l1=l1.next; l2=l2.next;
        }
        return l1.next;
    }
}

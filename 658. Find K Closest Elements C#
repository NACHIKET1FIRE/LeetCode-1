public class Solution {
    public IList<int> FindClosestElements(int[] arr, int k, int x) {
         IList<int> answer=new List<int>();
        if (k==0) return answer;
        int length=arr.Length-1;
        int left=0, right=length, mid;
        int[] indexes=new int[2];
        while(left+1<right){
            mid=left+(right-left)/2;
            if (arr[mid]==x){
                indexes=FindIndexes(arr, k, x, mid, length);
                
                for (int i=indexes[0]; i<=indexes[1]; i++) answer.Add(arr[i]);
                return answer;
            }
            else if(arr[mid]<x) left=mid;
            else right=mid;
        }
        
        int closest=x-arr[left]>arr[right]-x?right:left;
        
        indexes=FindIndexes(arr, k,x, closest, length);
        for (int i=indexes[0]; i<=indexes[1]; i++) answer.Add(arr[i]);
        return answer;
    }  
    public static int[] FindIndexes(int[]arr, int k, int x, int mid, int length){
        int[]indexes=new int[2];
        int p1=mid, p2=mid;
        while(k>1){
            if (p1==0){
                p2+=k-1;break;
            }
            if (p2==length){
                p1-=k-1; break;
            }
            if (x-arr[p1-1]>arr[p2+1]-x) p2++;            
            else p1--;
            k--;           
            
           
           
        }
        
        indexes[0]=p1; indexes[1]=p2;
        
        return indexes;
    }
}
